# Define procedures

procedures:
  # ====== Decode =======
  decode_offset:
    input: 'u16'
    output: 'f32'
    formula: 'x as f32'
  decode_temperature:
    input: 'u8'
    output: 'f32'
    formula: |
      let precision_range_start: f32 = 20.0;
      if x & 0x80 != 0 {
        precision_range_start + ((x & 0x7F) as f32 / 10.0)
        // High precision mode
      } else {
        x as f32 // Integer mode
      }
  decode_bms_voltage:
    input: 'u16'
    output: 'f32'
    formula: '(x as f32) / 10.0'
  decode_bms_temperature:
    input: 'u16'
    output: 'f32'
    formula: 'x as f32'
  convert_i16_to_u64:
    input: 'i16'
    output: 'u64'
    formula: 'x as u64 * 1000'
  scale_10:
    input: 'i16'
    output: 'f32'
    formula: '(x as f32) / 10.0'
  scale_100:
    input: 'f32'
    output: 'f32'
    formula: 'x * 100.0'
  scale_1000:
    input: 'i16'
    output: 'f32'
    formula: '(x as f32) / 1000.0'
  
  identity_u8:
    input: 'u8'
    output: 'u8'
    formula: 'x'

  identity_i16:
    input: 'i16'
    output: 'i16'
    formula: 'x'
  
  identity_u16:
    input: 'u16'
    output: 'u16'
    formula: 'x'
  
  identity_i32:
    input: 'i32'
    output: 'i32'
    formula: 'x'

#  f16_to_f32:
#    input: 'f16'
#    output: 'f32'
#    formula: 'x as f32'

  # ======= GS communication =======
  # dump = convert Main PCB values to u64, to dump over ethernet (on main PCB)
  # parse = convert the u64 values received from ethernet to f64 (for display, on GS)
  dump-gs_2p_float:
    input: 'f32'
    output: 'u64'
    formula: '((10000.0 + x) * 100.0) as u64'
  parse-gs_2p_float:
    input: 'u64'
    output: 'f64'
    formula: '((x as f64) / 100.0) - 10000.0'
  
  dump-gs_u64:
    input: 'u64'
    output: 'u64'
    formula: 'x'
  parse-gs_u64:
    input: 'u64'
    output: 'f64'
    formula: 'x as f64'
  
  dump-gs_bool_u8:
    input: 'u8'
    output: 'u64'
    formula: 'x as u64'
  
  parse-gs_bool_u8:
    input: 'u64'
    output: 'f64'
    formula: 'x as f64'

  
  dump-gs_u8:
    input: 'u8'
    output: 'u64'
    formula: 'x as u64'
  
  parse-gs_u8:
    input: 'u64'
    output: 'f64'
    formula: 'x as f64'

  dump-gs_u16:
    input: 'u16'
    output: 'u64'
    formula: 'x as u64'
  
  parse-gs_u16:
    input: 'u64'
    output: 'f64'
    formula: 'x as f64'
  
  dump-gs_i16:
    input: 'i16'
    output: 'u64'
    formula: 'x as u64'
  
  parse-gs_i16:
    input: 'u64'
    output: 'f64'
    formula: 'x as f64'

  dump-gs_i32:
    input: 'i32'
    output: 'u64'
    formula: 'x as u64'
  
  parse-gs_i32:
    input: 'u64'
    output: 'f64'
    formula: 'x as f64'

  default_command_process:
    input: 'u64'
    output: '[u8; 8]'
    formula: 'x.to_be_bytes()'


standard-datapoints:
  - datapoint:
      name: 'DefaultDatatype'
      id: 0x00
    # upper: 42002
  - datapoint:
      name: 'CommandHash'
      id: 0x167
    priority: 1

  - datapoint:
      name: 'DataHash'
      id: 0x169
    priority: 1

  - datapoint:
      name: 'ConfigHash'
      id: 0x171
    priority: 1

  - datapoint:
      name: 'ValueError'
      id: 0x16a
    priority: 1

  - datapoint:
      name: 'ValueWarning'
      id: 0x16b
    priority: 1

  - datapoint:
      name: 'ValueCausedBraking'
      id: 0x16c
    priority: 1

  - datapoint:
      name: 'LocalisationHeartbeat'
      id: 0x16e

  - datapoint:
      name: 'SensorHubHeartbeat'
      id: 0x16f

  - datapoint:
      name: 'FrontendHeartbeating'
      id: 0x170
    priority: 1

  - datapoint:
      name: 'FSMState'
      id: 0x202
      store:
        default: 0
      stale_after: 10
      critical: false

  - datapoint:
      name: 'FSMTransitionFail'
      id: 0x204
      store:
        default: 100

  - datapoint:
      name: 'Emergency'
      id: 0x205
      store:
        default: 0

message-processing:
  - name: 'TempMotorLeft'
    can:
      id: 0x33B
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'TempMotorLeft0'
          id: 0x4B0
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Left")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u8[0..1]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        lower: 0
        upper: 80
        stale_after: 3
        critical: true
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorLeft1'
          id: 0x4B1
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Left")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u8[1..2]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        lower: 0
        upper: 80
        stale_after: 3
        critical: true
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorLeft2'
          id: 0x4B2
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Left")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u8[2..3]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        lower: 0
        upper: 80
        stale_after: 3
        critical: true
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorLeft3'
          id: 0x4B3
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Left")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'u8[3..4]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        lower: 0
        upper: 80
        stale_after: 3
        critical: true
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorLeft4'
          id: 0x4B4
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Left")!.addEntry(5, curr);
                  return curr;
              }
        getter: 'u8[4..5]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        lower: 0
        upper: 80
        stale_after: 3
        critical: true
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorLeft5'
          id: 0x4B5
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Left")!.addEntry(6, curr);
                  return curr;
              }
        getter: 'u8[5..6]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        lower: 0
        upper: 80
        stale_after: 3
        critical: true
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorLeft6'
          id: 0x556
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Left")!.addEntry(7, curr);
                  return curr;
              }
        getter: 'u8[6..7]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        lower: 0
        upper: 80
        stale_after: 3
        critical: true
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorLeft7'
          id: 0x557
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Left")!.addEntry(8, curr);
                  return curr;
              }
        getter: 'u8[7..8]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        lower: 0
        upper: 80
        stale_after: 3
        critical: true
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'TempMotorRight'
    can:
      id: 0x33C
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'TempMotorRight0'
          id: 0x520
          lower: 0
          upper: 80
          stale_after: 3
          critical: true
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Right")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u8[0..1]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorRight1'
          id: 0x50A
          lower: ~
          upper: ~
          stale_after: ~
          critical: false
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Right")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u8[1..2]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorRight2'
          id: 0x50B
          lower: ~
          upper: ~
          stale_after: ~
          critical: false
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Right")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u8[2..3]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'

      - datapoint:
          name: 'TempMotorRight3'
          id: 0x50C
          lower: ~
          upper: ~
          stale_after: ~
          critical: false
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Right")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'u8[3..4]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'

      - datapoint:
          name: 'TempMotorRight4'
          id: 0x50D
          lower: ~
          upper: ~
          stale_after: ~
          critical: false
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Right")!.addEntry(5, curr);
                  return curr;
              }
        getter: 'u8[4..5]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'

      - datapoint:
          name: 'TempMotorRight5'
          id: 0x50E
          lower: ~
          upper: ~
          stale_after: ~
          critical: false
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Right")!.addEntry(6, curr);
                  return curr;
              }
        getter: 'u8[5..6]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'

      - datapoint:
          name: 'TempMotorRight6'
          id: 0x50F
          lower: ~
          upper: ~
          stale_after: ~
          critical: false
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Right")!.addEntry(7, curr);
                  return curr;
              }
        getter: 'u8[6..7]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempMotorRight7'
          id: 0x555
          lower: ~
          upper: ~
          stale_after: ~
          critical: false
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Motor Temperatures Right")!.addEntry(8, curr);
                  return curr;
              }
        getter: 'u8[7..8]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'PTCLogs'
    can:
      id: 0x4E3
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'PTCState'
          id: 0x3A3
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
      - datapoint:
          name: 'HVALState'
          id: 0x3A4
          store:
            default: 0
        getter: 'u8[1..2]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
      - datapoint:
          name: 'IMDWarnings'
          id: 0x3A5
          lower: 0
          upper: 1
          stale_after: 1
          critical: true
          store:
            default: 0
        getter: 'u8[2..3]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
      - datapoint:
          name: 'Errors'
          id: 0x3A6
          lower: 0
          upper: 1
          stale_after: 1
          critical: true
          store:
            default: 0
        getter: 'u8[3..4]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'BMSLog1'
    can:
      id: 0x4E4
      bus: can2
    # fsm:
    #   event: 'ShutDown'
    datapoint-conversion:
      - datapoint:
          name: 'BMSVoltageHigh'
          id: 0x123
          lower: 360
          upper: 420
          stale_after: 2
          critical: true
          gs: BMSVoltageHigh
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("BMS Voltage High")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
        display-units: 'V'
        limits:
          upper: { warn: 360, err: 420 }
          lower: { warn: 280, err: 270 }
      - datapoint:
          name: 'BMSVoltageLow'
          id: 0x19D
          lower: 280
          upper: 360
          stale_after: 2
          critical: true
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("BMS Voltage Low")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
        display-units: 'V'
        limits:
          upper: { warn: 360, err: 420 }
          lower: { warn: 280, err: 270 }
      - datapoint:
          name: 'BMSTemperatureHigh'
          id: 0x3A2
          lower: 0
          upper: 80
          stale_after: 3
          critical: true
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("BMS Temps")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[4..6]'
        can-conversion: 'decode_bms_temperature:u16->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
        limits:
          upper: { warn: 80, err: 0 }
          lower: { warn: 0, err: 0 }
      - datapoint:
          name: 'BMSTemperatureLow'
          id: 0x19E
          lower: 0
          upper: 80
          stale_after: 3
          critical: true
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("BMS Temps")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[6..8]'
        can-conversion: 'decode_bms_temperature:u16->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
        limits:
          upper: { warn: 80, err: 0 }
          lower: { warn: 0, err: 0 }
  - name: 'BMSLog2'
    can:
      id: 0x4E5
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'VPack'
          id: 0x3A5
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("BMS Logs")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
        display-units: 'V'
        limits:
          upper: { warn: 360, err: 420 }
          lower: { warn: 280, err: 270 }
      - datapoint:
          name: 'IPack'
          id: 0x3A6
          lower: -200
          upper: 200
          stale_after: 2
          critical: true
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("BMS Logs")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
        display-units: 'A'
        limits:
          upper: { warn: 360, err: 420 }
          lower: { warn: 280, err: 270 }
      - datapoint:
          name: 'VDCLink'
          id: 0x3A7
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("BMS Logs")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'f32[4..8]'
        can-conversion: 'scale_100:f32->f32'
        display-units: 'mV'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'LVBMSLog1'
    can:
      id: 0x4E6
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_BMS_VoltageHigh'
          id: 0x4E61
          lower: 10
          upper: 16
          stale_after: 3
          critical: true
          store:
            default: 0
        getter: 'u16[0..2]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        display-units: 'V'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'LV_BMS_VoltageLow'
          id: 0x4E62
          lower: 10
          upper: 16
          stale_after: 3
          critical: true
          store:
            default: 0
        getter: 'u16[2..4]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        display-units: 'V'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'LV_BMS_TemperatureHigh'
          id: 0x4E63
          lower: 0
          upper: 80
          stale_after: 3
          critical: true
          store:
            default: 0
        getter: 'u16[4..6]'
        can-conversion: 'decode_bms_temperature:u16->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'LV_BMS_TemperatureLow'
          id: 0x4E64
          lower: 0
          upper: 80
          stale_after: 3
          critical: true
          store:
            default: 0
        getter: 'u16[6..8]'
        can-conversion: 'decode_bms_temperature:u16->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'LVBMSLog2'
    can:
      id: 0x4E7
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_BMS_VPack'
          id: 0x4E71
          store:
            default: 0
        getter: 'i16[0..2]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        display-units: 'V'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'LV_BMS_VPackAlt'
          id: 0x4E72
          store:
            default: 0
        getter: 'i16[2..4]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        display-units: 'V'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'LV_BMS_IPack'
          id: 0x4E73
          store:
            default: 0
        getter: 'i16[4..6]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        display-units: 'A'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'LV_BMS_IPackAlt'
          id: 0x4E74
          store:
            default: 0
        getter: 'i16[6..8]'
        can-conversion: 'decode_bms_voltage:u16->f32'
        display-units: 'A'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'InitCheck'
    can:
      id: 0x4E8
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'InitCheck'
          id: 0x4E81
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        display-units: ''
        gs:
          conversion: 'gs_u8:u8'
  - name: 'LVBattVoltages1'
    can:
      id: 0x4E9
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V1'
          id: 0x4E91
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V2'
          id: 0x4E92
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V3'
          id: 0x4E93
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V4'
          id: 0x4E94
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V5'
          id: 0x4E95
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V6'
          id: 0x4E96
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V7'
          id: 0x4E97
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V8'
          id: 0x4E98
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages2'
    can:
      id: 0x4EA
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V9'
          id: 0x4EA1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V10'
          id: 0x4EA2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V11'
          id: 0x4EA3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V12'
          id: 0x4EA4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V13'
          id: 0x4EA5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V14'
          id: 0x4EA6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V15'
          id: 0x4EA7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V16'
          id: 0x4EA8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages3'
    can:
      id: 0x4EB
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V17'
          id: 0x4EB1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V18'
          id: 0x4EB2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V19'
          id: 0x4EB3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V20'
          id: 0x4EB4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V21'
          id: 0x4EB5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V22'
          id: 0x4EB6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V23'
          id: 0x4EB7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V24'
          id: 0x4EB8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages4'
    can:
      id: 0x4EC
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V25'
          id: 0x4EC1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V26'
          id: 0x4EC2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V27'
          id: 0x4EC3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V28'
          id: 0x4EC4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V29'
          id: 0x4EC5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V30'
          id: 0x4EC6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V31'
          id: 0x4EC7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V32'
          id: 0x4EC8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages5'
    can:
      id: 0x4ED
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V33'
          id: 0x4ED1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V34'
          id: 0x4ED2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V35'
          id: 0x4ED3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V36'
          id: 0x4ED4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V37'
          id: 0x4ED5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V38'
          id: 0x4ED6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V39'
          id: 0x4ED7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V40'
          id: 0x4ED8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages6'
    can:
      id: 0x4EE
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V41'
          id: 0x4EE1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V42'
          id: 0x4EE2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V43'
          id: 0x4EE3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V44'
          id: 0x4EE4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V45'
          id: 0x4EE5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V46'
          id: 0x4EE6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V47'
          id: 0x4EE7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V48'
          id: 0x4EE8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages7'
    can:
      id: 0x4EF
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V49'
          id: 0x4EF1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V50'
          id: 0x4EF2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V51'
          id: 0x4EF3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V52'
          id: 0x4EF4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V53'
          id: 0x4EF5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V54'
          id: 0x4EF6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V55'
          id: 0x4EF7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V56'
          id: 0x4EF8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages8'
    can:
      id: 0x4F0
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V57'
          id: 0x4F01
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V58'
          id: 0x4F02
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V59'
          id: 0x4F03
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V60'
          id: 0x4F04
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V61'
          id: 0x4F05
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V62'
          id: 0x4F06
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V63'
          id: 0x4F07
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V64'
          id: 0x4F08
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages9'
    can:
      id: 0x4F1
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V65'
          id: 0x4F11
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V66'
          id: 0x4F12
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V67'
          id: 0x4F13
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V68'
          id: 0x4F14
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V69'
          id: 0x4F15
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V70'
          id: 0x4F16
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V71'
          id: 0x4F17
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V72'
          id: 0x4F18
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattVoltages10'
    can:
      id: 0x4F2
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_V73'
          id: 0x4F21
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V74'
          id: 0x4F22
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V75'
          id: 0x4F23
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V76'
          id: 0x4F24
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V77'
          id: 0x4F25
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V78'
          id: 0x4F26
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V79'
          id: 0x4F27
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_V80'
          id: 0x4F28
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'V'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps1'
    can:
      id: 0x4F3
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T1'
          id: 0x4F31
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T2'
          id: 0x4F32
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T3'
          id: 0x4F33
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T4'
          id: 0x4F34
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T5'
          id: 0x4F35
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T6'
          id: 0x4F36
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T7'
          id: 0x4F37
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T8'
          id: 0x4F38
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps2'
    can:
      id: 0x4F4
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T9'
          id: 0x4F41
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T10'
          id: 0x4F42
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T11'
          id: 0x4F43
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T12'
          id: 0x4F44
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T13'
          id: 0x4F45
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T14'
          id: 0x4F46
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T15'
          id: 0x4F47
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T16'
          id: 0x4F48
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps3'
    can:
      id: 0x4F5
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T17'
          id: 0x4F51
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T18'
          id: 0x4F52
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T19'
          id: 0x4F53
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T20'
          id: 0x4F54
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T21'
          id: 0x4F55
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T22'
          id: 0x4F56
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T23'
          id: 0x4F57
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T24'
          id: 0x4F58
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps4'
    can:
      id: 0x4F6
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T25'
          id: 0x4F61
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T26'
          id: 0x4F62
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T27'
          id: 0x4F63
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T28'
          id: 0x4F64
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T29'
          id: 0x4F65
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T30'
          id: 0x4F66
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T31'
          id: 0x4F67
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T32'
          id: 0x4F68
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps5'
    can:
      id: 0x4F7
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T33'
          id: 0x4F71
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T34'
          id: 0x4F72
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T35'
          id: 0x4F73
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T36'
          id: 0x4F74
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T37'
          id: 0x4F75
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T38'
          id: 0x4F76
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T39'
          id: 0x4F77
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T40'
          id: 0x4F78
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps6'
    can:
      id: 0x4F8
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T41'
          id: 0x4F81
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T42'
          id: 0x4F82
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T43'
          id: 0x4F83
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T44'
          id: 0x4F84
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T45'
          id: 0x4F85
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T46'
          id: 0x4F86
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T47'
          id: 0x4F87
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T48'
          id: 0x4F88
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps7'
    can:
      id: 0x4F9
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T49'
          id: 0x4F91
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T50'
          id: 0x4F92
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T51'
          id: 0x4F93
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T52'
          id: 0x4F94
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T53'
          id: 0x4F95
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T54'
          id: 0x4F96
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T55'
          id: 0x4F97
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T56'
          id: 0x4F98
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps8'
    can:
      id: 0x4FA
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T57'
          id: 0x4FA1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T58'
          id: 0x4FA2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T59'
          id: 0x4FA3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T60'
          id: 0x4FA4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T61'
          id: 0x4FA5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T62'
          id: 0x4FA6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T63'
          id: 0x4FA7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T64'
          id: 0x4FA8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps9'
    can:
      id: 0x4FB
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T65'
          id: 0x4FB1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T66'
          id: 0x4FB2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T67'
          id: 0x4FB3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T68'
          id: 0x4FB4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T69'
          id: 0x4FB5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T70'
          id: 0x4FB6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T71'
          id: 0x4FB7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T72'
          id: 0x4FB8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'LVBattTemps10'
    can:
      id: 0x4FC
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LV_Batt_T73'
          id: 0x4FC1
          store:
            default: 0
        getter: 'i8[0..1]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T74'
          id: 0x4FC2
          store:
            default: 0
        getter: 'i8[1..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T75'
          id: 0x4FC3
          store:
            default: 0
        getter: 'i8[2..3]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T76'
          id: 0x4FC4
          store:
            default: 0
        getter: 'i8[3..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T77'
          id: 0x4FC5
          store:
            default: 0
        getter: 'i8[4..5]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T78'
          id: 0x4FC6
          store:
            default: 0
        getter: 'i8[5..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T79'
          id: 0x4FC7
          store:
            default: 0
        getter: 'i8[6..7]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'LV_Batt_T80'
          id: 0x4FC8
          store:
            default: 0
        getter: 'i8[7..8]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'TemperaturePrecisionRange'
    can:
      id: 0x1B4
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'TempRangeStart'
          id: 0x510
          store:
            default: 0
        getter: 'i16[0..2]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
      - datapoint:
          name: 'TempRangeEnd'
          id: 0x511
          store:
            default: 0
        getter: 'i16[2..4]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: '°C'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'Localization'
    can:
      id: 0x33A
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'Localization'
          id: 0x321
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Localization")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'i32[0..4]'
        can-conversion: 'identity_i32:i32->i32'
        display-units: 'mm'
        gs:
          conversion: 'gs_i32:i32'
      - datapoint:
          name: 'Velocity'
          id: 0x527
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Velocity")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'i16[4..6]'
        can-conversion: 'identity_i16:i16->i16'
        display-units: 'mm'
        gs:
          conversion: 'gs_i16:i16'
  - name: 'PPInitFault1'
    can:
      id: 0x505
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'PPInitFault1'
          id: 0x507
          store:
            default: 255
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'PPInitFault2'
    can:
      id: 0x506
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'PPInitFault2'
          id: 0x508
          store:
            default: 255
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'PPEmergency1'
    can:
      id: 0x4C
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'PPEmergency1'
          id: 0x04
          lower: 0
          upper: 1
          stale_after: 1
          critical: true
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("BMS Logs")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'PPEmergency2'
    can:
      id: 0x4D
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'PPEmergency2'
          id: 0x003
          lower: 0
          upper: 1
          stale_after: 1
          critical: true
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'SensorHubEmergency'
    can:
      id: 0x1A
      bus: can1
    datapoint-conversion:
      - datapoint:
          name: 'SensorHubEmergency'
          id: 0x1A01
          store:
            default: 0
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        display-units: ''
        gs:
          conversion: 'gs_u16:u16'
  - name: 'PTEmergency'
    can:
      id: 0x33
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'PTCError'
          id: 0x331
          lower: 0
          upper: 1
          stale_after: 1
          critical: true
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
      - datapoint:
          name: 'BMSError'
          id: 0x332
          lower: 0
          upper: 1
          stale_after: 1
          critical: true
          store:
            default: 0
        getter: 'u8[1..2]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'Word1'
    can:
      id: 0x4FC
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'Word1'
          id: 0x5B8
          store:
            default: 0
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
  - name: 'Word2'
    can:
      id: 0x500
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'Word2'
          id: 0x4B6
          store:
            default: 0
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
  - name: 'Log1RightMotor'
    can:
      id: 0x4FD
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'IqMeasured1'
          id: 0x4B7
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 1 - Right Motor")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'i16[0..2]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'IqReference1'
          id: 0x4B8
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 1 - Right Motor")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'i16[2..4]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'IdMeasured1'
          id: 0x4B9
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 1 - Right Motor")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'i16[4..6]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'IdReference1'
          id: 0x4BA
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 1 - Right Motor")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'i16[6..8]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'Log1LeftMotor'
    can:
      id: 0x502
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'IqMeasured2'
          id: 0x4BB
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 1 - Left Motor")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'i16[0..2]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'IqReference2'
          id: 0x4BC
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 1 - Left Motor")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'i16[2..4]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'IdMeasured2'
          id: 0x4BD
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 1 - Left Motor")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'i16[4..6]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'IdReference2'
          id: 0x4BE
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 1 - Left Motor")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'i16[6..8]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'Log2RightMotor'
    can:
      id: 0x4FE
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'Vq_Log1'
          id: 0x4BF
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 2 - Right Motor")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'i16[0..2]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Vd_Log1'
          id: 0x521
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 2 - Right Motor")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'i16[2..4]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Vbus1'
          id: 0x4C1
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 2 - Right Motor")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'i16[4..6]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Ibus1'
          id: 0x4C2
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 2 - Right Motor")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'i16[6..8]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'CANLog'
    can:
      id: 0xFFE
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: "CANLog"
          id: 0xFFD
          store:
            default: 0
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
  - name: 'Log2LeftMotor'
    can:
      id: 0x503
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'Vq_Log2'
          id: 0x4C3
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 2 - Left Motor")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'i16[0..2]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Vd_Log2'
          id: 0x4C4
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 2 - Left Motor")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'i16[2..4]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Vbus2'
          id: 0x4C5
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 2 - Left Motor")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'i16[4..6]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Ibus2'
          id: 0x4C6
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 2 - Left Motor")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'i16[6..8]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'Log3RightMotor'
    can:
      id: 0x4FF
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'Ta1'
          id: 0x4C7
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 3 - Right Motor")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'i16[0..2]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Tb1'
          id: 0x4C8
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 3 - Right Motor")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'i16[2..4]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Tc1'
          id: 0x4C9
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 3 - Right Motor")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'i16[4..6]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TCASE1'
          id: 0x4CA
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 3 - Right Motor")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'i16[6..8]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'Log3LeftMotor'
    can:
      id: 0x504
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'Ta2'
          id: 0x4CB
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 3 - Left Motor")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'i16[0..2]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Tb2'
          id: 0x4CC
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 3 - Left Motor")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'i16[2..4]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Tc2'
          id: 0x4CD
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 3 - Left Motor")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'i16[4..6]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TCASE2'
          id: 0x4CE
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Propulsion Log 3 - Left Motor")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'i16[6..8]'
        can-conversion: 'scale_10:i16->f32'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'FSMAckProp1'
    can:
      id: 0x36C
      bus: can2
    fsm:
      event: 'PropulsionAck1'
    datapoint-conversion:
      - datapoint:
          name: 'FSMAckProp1'
          id: 0x525
          store:
            default: 0
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
  - name: 'FSMAckProp2'
    can:
      id: 0x36D
      bus: can2
    fsm:
      event: 'PropulsionAck2'
    datapoint-conversion:
      - datapoint:
          name: 'FSMAckProp2'
          id: 0x526
          store:
            default: 0
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
  - name: 'FSMAckLevi'
    can:
      id: 0x385
      bus: can2
    fsm:
      event: 'LeviAck'
    datapoint-conversion:
      - datapoint:
          name: 'FSMAckLevi'
          id: 0x52A
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'ClearFaultAckLevi'
    can:
      id: 0x386
      bus: can2
    fsm:
      event: 'ClearFaultAckLevi'
    datapoint-conversion:
      - datapoint:
          name: 'ClearFaultAckLevi'
          id: 0x52B
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'Offset'
    can:
      id: 0x387
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'Offset1'
          id: 0x848
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Offset")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'decode_offset:u16->f32'
        display-units: 'mm'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Offset2'
          id: 0x849
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Offset")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'decode_offset:u16->f32'
        display-units: 'mm'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Offset3'
          id: 0x84A
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Offset")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u16[4..6]'
        can-conversion: 'decode_offset:u16->f32'
        display-units: 'mm'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'Offset4'
          id: 0x84B
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Offset")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'u16[6..8]'
        can-conversion: 'decode_offset:u16->f32'
        display-units: 'mm'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'LeviFault'
    can:
      id: 0x65
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LeviFault'
          id: 0x568
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'LeviHeartbeat'
    can:
      id: 0x388
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LeviHeartbeat'
          id: 0x567
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'LeviFSMStateChanged'
    can:
      id: 0x389
      bus: can2
    fsm:
      event: 'LeviAck'
    datapoint-conversion:
      - datapoint:
          name: 'LeviFSMStateChanged'
          id: 0x566
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'LevitationState'
    can:
      id: 0x515
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LevitationState'
          id: 0x528
          store:
            default: 0
        getter: 'u8[0..1]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
      - datapoint:
          name: 'NonCriticalLeviError'
          id: 0x529
          store:
            default: 0
        getter: 'u8[1..2]'
        can-conversion: 'identity_u8:u8->u8'
        gs:
          conversion: 'gs_u8:u8'
  - name: 'Airgaps'
    can:
      id: 0x516
      bus: can2
      log_period: 100
    datapoint-conversion:
      - datapoint:
          name: 'Vertical'
          id: 0x52C
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Air Gaps")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'Vertical-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 100)'
      - datapoint:
          name: 'Lateral'
          id: 0x52D
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Air Gaps")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'Lateral-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 100)'
  - name: 'Angles'
    can:
      id: 0x517
      bus: can2
      log_period: 100
    datapoint-conversion:
      - datapoint:
          name: 'Roll'
          id: 0x52E
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Angles")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'Roll'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 1000000)'
      - datapoint:
          name: 'Pitch'
          id: 0x52F
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Angles")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'Pitch'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 1000000)'
      - datapoint:
          name: 'Yaw'
          id: 0x530
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Angles")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u16[4..6]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'Yaw'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 1000000)'
  - name: 'CurrentHEMSFront'
    can:
      id: 0x518
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'VFL1'
          id: 0x531
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("HEMS Current")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'VFL1-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'VFL2'
          id: 0x532
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("HEMS Current")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'VFL2-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'VFR1'
          id: 0x533
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("HEMS Current")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u16[4..6]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'VFR1-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'VFR2'
          id: 0x534
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("HEMS Current")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'u16[6..8]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'VFR2-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
  - name: 'CurrentHEMSBack'
    can:
      id: 0x519
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'VBL1'
          id: 0x562
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("HEMS Current")!.addEntry(5, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'VBL1-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'VBL2'
          id: 0x563
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("HEMS Current")!.addEntry(6, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'VBL2-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'VBR1'
          id: 0x564
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("HEMS Current")!.addEntry(7, curr);
                  return curr;
              }
        getter: 'u16[4..6]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'VBR1-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'VBR2'
          id: 0x565
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("HEMS Current")!.addEntry(8, curr);
                  return curr;
              }
        getter: 'u16[6..8]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'VBR2-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
  - name: 'CurrentEMS'
    can:
      id: 0x51A
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'LF1'
          id: 0x535
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("EMS Current")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'LF1-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'LF2'
          id: 0x536
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("EMS Current")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'LF2-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'LB1'
          id: 0x560
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("EMS Current")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u16[4..6]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'LB1-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
      - datapoint:
          name: 'LB2'
          id: 0x561
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("EMS Current")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'u16[6..8]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'LB2-Beckhoff'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 10)'
  - name: 'RequestedForceVerticalLevi'
    can:
      id: 0x51C
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'ZRequested'
          id: 0x537
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Requested Force Vertical")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'Z'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 100)'
      - datapoint:
          name: 'RollRequested'
          id: 0x538
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Requested Force Vertical")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'RollRequested'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 100)'
      - datapoint:
          name: 'PitchRequested'
          id: 0x539
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Requested Force Vertical")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u16[4..6]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'PitchRequested'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 100)'
  - name: 'RequestedForceHorizontalLevi'
    can:
      id: 0x51D
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'YRequested'
          id: 0x53A
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Requested Force Horizontal")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u16[0..2]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'YRequested'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 100)'
      - datapoint:
          name: 'YawRequested'
          id: 0x53B
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Requested Force Horizontal")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u16[2..4]'
        can-conversion: 'identity_u16:u16->u16'
        gs:
          conversion: 'gs_u16:u16'
        beckhoff:
          name: 'YawRequested'
          levi_type: 'LReal'
          formula: 'LREAL_TO_UINT($ * 100)'
  - name: 'TempHEMS'
    can:
      id: 0x33D
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'TempHEMS1'
          id: 0x53C
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures HEMS")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u8[0..1]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempHEMS2'
          id: 0x53D
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures HEMS")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u8[1..2]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempHEMS3'
          id: 0x53E
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures HEMS")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u8[2..3]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempHEMS4'
          id: 0x53F
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures HEMS")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'u8[3..4]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempHEMS5'
          id: 0x540
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures HEMS")!.addEntry(5, curr);
                  return curr;
              }
        getter: 'u8[4..5]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempHEMS6'
          id: 0x541
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures HEMS")!.addEntry(6, curr);
                  return curr;
              }
        getter: 'u8[5..6]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempHEMS7'
          id: 0x542
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures HEMS")!.addEntry(7, curr);
                  return curr;
              }
        getter: 'u8[6..7]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempHEMS8'
          id: 0x543
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures HEMS")!.addEntry(8, curr);
                  return curr;
              }
        getter: 'u8[7..8]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
  - name: 'TempEMS'
    can:
      id: 0x33E
      bus: can2
    datapoint-conversion:
      - datapoint:
          name: 'TempEMS1'
          id: 0x544
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures EMS")!.addEntry(1, curr);
                  return curr;
              }
        getter: 'u8[0..1]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempEMS2'
          id: 0x545
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures EMS")!.addEntry(2, curr);
                  return curr;
              }
        getter: 'u8[1..2]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempEMS3'
          id: 0x546
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures EMS")!.addEntry(3, curr);
                  return curr;
              }
        getter: 'u8[2..3]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempEMS4'
          id: 0x547
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures EMS")!.addEntry(4, curr);
                  return curr;
              }
        getter: 'u8[3..4]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempEMS5'
          id: 0x548
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures EMS")!.addEntry(5, curr);
                  return curr;
              }
        getter: 'u8[4..5]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempEMS6'
          id: 0x549
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures EMS")!.addEntry(6, curr);
                  return curr;
              }
        getter: 'u8[5..6]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempEMS7'
          id: 0x54A
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures EMS")!.addEntry(7, curr);
                  return curr;
              }
        getter: 'u8[6..7]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'
      - datapoint:
          name: 'TempEMS8'
          id: 0x54B
          store:
            default: 0
            callback: |
              data => {
                  const curr = Number(data);
                  $chartStore.get("Temperatures EMS")!.addEntry(8, curr);
                  return curr;
              }
        getter: 'u8[7..8]'
        can-conversion: 'decode_temperature:u8->f32'
        display-units: '°C'
        gs:
          conversion: 'gs_2p_float:f32'


commands:
  - name: 'SendHashes'
    id: 0x888
  - name: 'LeviDropdown'
    id: 0x1BA
    can:
      id: 0x1BA
      bus: can2
  - name: 'DefaultCommand'
    id: 0xFFF
  - name: 'GeneralEmergency'
    id: 0x1
    can:
      id: 0x1
      bus: can2
  - name: 'FSMUpdate'
    id: 0x190
    can:
      id: 0x190
      bus: can2
      trim: 7
  - name: 'SystemCheck'
    id: 0x191
    can:
      id: 0x191
      bus: can2
  - name: 'ResetSenseCon'
    id: 0x1AA
    can:
        id: 0x1AA
        bus: can2
  - name: 'ResetPowertrain'
    id: 0x1AB
    can:
      id: 0x1AB
      bus: can2
  - name: 'ResetPropulsion'
    id: 0x1AC
    can:
      id: 0x1AC
      bus: can2
  - name: 'ResetLevitation'
    id: 0x1AD
    can:
      id: 0x1AD
      bus: can2
  - name: 'ResetLocalization'
    id: 0x1B5
    can:
      id: 0x1B5
      bus: can2
  - name: 'Heartbeat'
    id: 0x042
  - name: 'FrontendHeartbeat'
    id: 0x043
  - name: 'EmitEvent'
    id: 0x7A0
  - name: 'StartHV'
    id: 0x60
  - name: 'StopHV'
    id: 0x61
  - name: 'LevitationOn'
    id: 0x407
  - name: 'LevitationOff'
    id: 0x408
  - name: 'PropulsionOn'
    id: 0x6c
  - name: 'PropulsionOff'
    id: 0x6d
  - name: 'SendPropulsionControlWord1'
    id: 0x1AE
    can:
      id: 0x1AE
      bus: can2
  - name: 'SendPropulsionControlWord2'
    id: 0x1AF
    can:
      id: 0x1AF
      bus: can2
  - name: 'PPControlParams'
    id: 0x1B0
    can:
      id: 0x1B0
      bus: can2
  - name: 'PPDebugParams1'
    id: 0x1B1
    can:
      id: 0x1B1
      bus: can2
  - name: 'PPDebugParams2'
    id: 0x1B2
    can:
      id: 0x1B2
      bus: can2
  - name: 'PPTestControlParams'
    id: 0x1B3
    can:
      id: 0x1B3
      bus: can2
  - name: 'PPRunParametersB'
    id: 0x1B7
    can:
      id: 0x1B7
      bus: can2
  - name: 'PPRunParameters1'
    id: 0x1B8
    can:
      id: 0x1B8
      bus: can2
  - name: 'PPRunParameters2'
    id: 0x1B9
    can:
      id: 0x1B9
      bus: can2
  - name: 'Shutdown'
    id: 0x5f
  - name: 'EmergencyBrake'
    id: 0xff
    can:
      id: 0x002
      bus: can2
  - name: 'SystemReset'
    id: 0x192
  - name: 'RearmSDC'
    id: 0x1B6
  - name: 'ConnectionEstablished'
    id: 0x206
  - name: 'ConnectionClosed'
    id: 0x207
  - name: 'MockPtAck'
    id: 0x208
  - name: 'MockLeviAck'
    id: 0x209
  - name: 'MockPropAck'
    id: 0x210
  - name: 'MockHVOn'
    id: 0x211
  - name: 'RequestFsmState'
    id: 0x212

beckhoff:
  task-period: 10 # period in ms